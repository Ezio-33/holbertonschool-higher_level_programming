"""
Définit une classe MyList qui hérite de list
"""

>>> MyList = __import__('1-my_list').MyList

Test for success
================

# Créer une instance de MyList et ajouter des éléments positifs
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

# Créer une instance de MyList et ajouter des éléments négatifs
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -4, -2, -3, -5]
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]
>>> print(my_list)
[-1, -4, -2, -3, -5]

# Créer une instance de MyList et ajouter des chaînes de caractères
>>> my_list = MyList()
>>> my_list.append("baguette")
>>> my_list.append("fromage")
>>> print(my_list)
['baguette', 'fromage']
>>> my_list.print_sorted()
['baguette', 'fromage']
>>> print(my_list)
['baguette', 'fromage']

# Créer une instance de MyList vide
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list.print_sorted()
[]
>>> print(my_list)
[]

# Liste déjà triée
>>> sorted_list = MyList([1, 2, 3, 4, 5])
>>> sorted_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(sorted_list)
[1, 2, 3, 4, 5]

# Liste avec des éléments identiques
>>> identical_list = MyList([2, 2, 2, 2])
>>> identical_list.print_sorted()
[2, 2, 2, 2]
>>> print(identical_list)
[2, 2, 2, 2]